# This is a basic workflow to help you get started with Actions

name: nix CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  hb:
    runs-on: ubuntu-latest

    steps:
    - name: Cachix install
      uses: cachix/install-nix-action@v12
    - name: Cachix setup
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
        extraPullNames: coq
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Cache Nix Store
      uses: actions/cache@v2.1.4
      id: cache-nix
      with:
        path: nix-store.nar
        key: nix-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          nix-${{ runner.os }}-
    - name: Import Nix Store
      if: steps.cache-nix.outputs.cache-hit
      run: nix-store --import < nix-store.nar
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build
      run: nix-build
    - name: Compute Closure
      run: nix path-info --all | tee closure.txt
    - name: Export Nix Store
      run: xargs --arg-file=closure.txt nix-store --export > nix-store.nar

  mathcomp:
    runs-on: ubuntu-latest
    needs: hb
    steps:
    - name: Cachix install
      uses: cachix/install-nix-action@v12
    - name: Cachix setup
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
        extraPullNames: coq
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Cache Nix Store
      uses: actions/cache@v2.1.4
      id: cache-nix
      with:
        path: nix-store.nar
        key: nix-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          nix-${{ runner.os }}-
    - name: Import Nix Store
      if: steps.cache-nix.outputs.cache-hit
      run: nix-store --import < nix-store.nar
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build
      run: nix-build --arg ci true
    - name: Compute Closure
      run: nix path-info --all | tee closure.txt
    - name: Export Nix Store
      run: xargs --arg-file=closure.txt nix-store --export > nix-store.nar
